document.addEventListener('DOMContentLoaded', initApp);

function initApp() {
    Telegram.WebApp.ready();
    setupMainButton();
    fetchSecrets();
    Telegram.WebApp.expand();
    Telegram.WebApp.setHeaderColor('secondary_bg_color');

    if (Telegram.WebApp.initDataUnsafe.start_param) {
        if (Telegram.WebApp.initDataUnsafe.start_param == 'create_secret')
            window.location = window.location.origin + "/create_secret"
        foundedNewSecret(Telegram.WebApp.initDataUnsafe.start_param);
    }
}

function setupMainButton() {
    Telegram.WebApp.MainButton.setParams({ text: '–°–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –°–µ–∫—Ä–µ—Ç' });
    Telegram.WebApp.MainButton.onClick(() => {
        Telegram.WebApp.showScanQrPopup('–£–ª—ã–±–∞–π—Å—è', qrTextReceived);
    });
    Telegram.WebApp.MainButton.show();
}


function createCardElement(card) {
    const cardDiv = document.createElement('div');
    cardDiv.className = 'card';

    const cardContentDiv = document.createElement('div');
    cardContentDiv.className = 'card-content';

    const titleElement = document.createElement('div');
    titleElement.className = 'card-title';
    titleElement.textContent = card.title;

    const descriptionElement = document.createElement('div');
    descriptionElement.className = 'card-description';
    descriptionElement.textContent = card.description;

    cardContentDiv.appendChild(titleElement);
    cardContentDiv.appendChild(descriptionElement);

    const buttonContainerDiv = document.createElement('div');
    buttonContainerDiv.className = 'card-button-container';

    const buttonElement = document.createElement('a');
    buttonElement.className = 'card-button';
    buttonElement.textContent = '–û—Ç–∫—Ä—ã—Ç—å';
    buttonElement.href = card.link;
    buttonElement.target = '_blank';

    buttonContainerDiv.appendChild(buttonElement);

    cardDiv.appendChild(cardContentDiv);
    cardDiv.appendChild(buttonContainerDiv);

    return cardDiv;
}

function qrTextReceived(data) {
    var text = data;
    if (text.startsWith("https://t.me/secretqr_bot/SecretQR?startapp=") || text.startsWith("tg://resolve?domain=secretqr_bot&appname=SecretQR&startapp=")) {
        const id = text.split('=').pop();
        foundedNewSecret(id);
    } else {
        Telegram.WebApp.showPopup({
            title: '‚ùå –≠—Ç–æ –Ω–µ —Å–µ–∫—Ä–µ—Ç ‚ùå',
            message: '–°–∫–∞–Ω–∏—Ä—É–π —Å–µ–∫—Ä–µ—Ç—ã –æ—Ç –Ω–∞—à–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –¥—Ä—É–≥–∏–µ QR-–∫–æ–¥—ã –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è',
            buttons: [{ id: 'link', text: '–ü–æ–Ω—è—Ç–Ω–æ' }]
        });
    }
    return true;
}

async function foundedNewSecret(id) {
    const data = await fetchSecretById(id);
    if (data) {
        addNewSecret(id, data);
        Telegram.WebApp.showPopup({
            title: '‚úÖ –ù–∞–π–¥–µ–Ω —Å–µ–∫—Ä–µ—ÇüïµÔ∏è‚Äç‚ôÇÔ∏è ‚úÖ',
            message: '–¢–µ–ø–µ—Ä—å —Ç–µ–±–µ –¥–æ—Å—Ç—É–ø–µ–Ω —ç—Ç–æ—Ç —Å–µ–∫—Ä–µ—Ç, –æ–Ω –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–µ–∫—Ä–µ—Ç–æ–≤',
            buttons: [{ id: 'link', text: '–•–æ—Ä–æ—à–æ' }]
        });
    } else {
        Telegram.WebApp.showPopup({
            title: '‚ö†Ô∏è –î–æ—Å—Ç—É–ø –∑–∞–∫—Ä—ã—Çü§∑‚Äç‚ôÄÔ∏è ‚ö†Ô∏è',
            message: '–ê–≤—Ç–æ—Ä —Å–µ–∫—Ä–µ—Ç–∞ –Ω–µ –¥–æ–±–∞–≤–∏–ª –≤–∞—Å –≤ —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–º –¥–æ—Å—Ç—É–ø–µ–Ω —ç—Ç–æ—Ç —Å–µ–∫—Ä–µ—Ç.',
            buttons: [{ id: 'link', text: '–Ø—Å–Ω–æ' }]
        });
    }
}

async function fetchSecretById(id) {
    const url = `/api/secrets/${id}`;
    const initData = Telegram.WebApp.initData;
    const headers = new Headers();
    headers.append('Authorization', 'Bearer ' + initData);

    try {
        const response = await fetch(url, { headers: headers });
        if (!response.ok) {
            throw new Error('Network response was not ok');
        }
        const data = await response.json();
        const container = document.getElementById('card-container');
        const cardElement = createCardElement(data.content);
        container.appendChild(cardElement);
        return data.content;
    } catch (error) {
        console.error('Error fetching secret:', error);
        return false;
    }
}

function addNewSecret(secret_id, data) {
    Telegram.WebApp.CloudStorage.setItem(secret_id, JSON.stringify(data), (error) => {
        if (!error) {
            document.getElementById('no-secrets').style.display = 'none'; // –°–∫—Ä—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        }
    });
}
